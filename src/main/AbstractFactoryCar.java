package main;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import interfaces.Carro;
import interfaces.ICarModelFactory;
import interfaces.ICreator;
import interfaces.IGaragem;
import interfaces.IRoda;
import interfaces.ISom;
import interfaces.ITeto;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Emerson
 */
public class AbstractFactoryCar extends javax.swing.JFrame {

    private ICarModelFactory carModel;
    private ICreator creator;
    private IGaragem garagem;
    private ISom som;
    private IRoda roda;
    private ITeto teto;
    private Carro carro;
    /**
     * Creates new form AbstractFactoryCar
     */
    public AbstractFactoryCar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCriarCarro = new javax.swing.JButton();
        btnAbrirTeto = new javax.swing.JButton();
        lblTipoCarro = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        btnAlinharRoda = new javax.swing.JButton();
        btnTocarSom = new javax.swing.JButton();
        comboTipoCarro = new javax.swing.JComboBox<>();
        btnRefresh = new javax.swing.JButton();
        btnEstacionar = new javax.swing.JButton();
        comboTipoGaragem = new javax.swing.JComboBox<>();
        lblTipoGaragem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCriarCarro.setEnabled(false);
        btnCriarCarro.setLabel("Criar Carro");
        btnCriarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarCarroActionPerformed(evt);
            }
        });

        btnAbrirTeto.setText("Abrir Teto");
        btnAbrirTeto.setEnabled(false);
        btnAbrirTeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirTetoActionPerformed(evt);
            }
        });

        lblTipoCarro.setText("Tipo de Carro:");

        display.setColumns(20);
        display.setRows(5);
        jScrollPane1.setViewportView(display);

        btnAlinharRoda.setText("Alinhar Roda");
        btnAlinharRoda.setEnabled(false);
        btnAlinharRoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlinharRodaActionPerformed(evt);
            }
        });

        btnTocarSom.setText("Tocar Som");
        btnTocarSom.setEnabled(false);
        btnTocarSom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTocarSomActionPerformed(evt);
            }
        });

        comboTipoCarro.setSelectedItem("SELECIONE");
        comboTipoCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoCarroActionPerformed(evt);
            }
        });

        btnRefresh.setText("Plugins Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnEstacionar.setText("Estacionar");
        btnEstacionar.setEnabled(false);
        btnEstacionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstacionarActionPerformed(evt);
            }
        });

        comboTipoGaragem.setSelectedItem("SELECIONE");
        comboTipoGaragem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoGaragemActionPerformed(evt);
            }
        });

        lblTipoGaragem.setText("Tipo de Garagem:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 9, Short.MAX_VALUE)
                        .addComponent(lblTipoCarro)
                        .addGap(228, 228, 228)
                        .addComponent(btnCriarCarro))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRefresh)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTipoGaragem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboTipoCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboTipoGaragem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEstacionar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnTocarSom)
                        .addGap(58, 58, 58)
                        .addComponent(btnAbrirTeto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAlinharRoda)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoCarro)
                    .addComponent(btnCriarCarro)
                    .addComponent(comboTipoCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnEstacionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTipoGaragem)
                            .addComponent(comboTipoGaragem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTocarSom)
                    .addComponent(btnAlinharRoda)
                    .addComponent(btnAbrirTeto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCriarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarCarroActionPerformed
        String tipoCarro;
        roda = carModel.createRoda();
        som = carModel.createSom();
        teto = carModel.createTeto();
        carro = (Carro) carModel.createCarro();
        habilitarDesabilitarBotoes(true);
        comboTipoGaragem.setEnabled(true);
        tipoCarro = carModel.toString(); 
        append("Novo Carro " + tipoCarro + " criado!");
    }//GEN-LAST:event_btnCriarCarroActionPerformed

    private void btnAbrirTetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirTetoActionPerformed
        append(carro.abrir());
    }//GEN-LAST:event_btnAbrirTetoActionPerformed

    private void btnAlinharRodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlinharRodaActionPerformed
        append(carro.alinhar());
    }//GEN-LAST:event_btnAlinharRodaActionPerformed

    private void btnTocarSomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTocarSomActionPerformed
        append(carro.tocar());
    }//GEN-LAST:event_btnTocarSomActionPerformed

    private void comboTipoCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoCarroActionPerformed
        if(comboTipoCarro.getSelectedItem().equals("SELECIONE")) {
            habilitarDesabilitarBotoes(false);
            if(garagem != null) {
                try {
                    garagem = garagem.getClass().newInstance();
                } catch (InstantiationException ex) {
                    Logger.getLogger(AbstractFactoryCar.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(AbstractFactoryCar.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            carModel = (ICarModelFactory)comboTipoCarro.getSelectedItem();
            habilitarDesabilitarBotoes(false);
            btnCriarCarro.setEnabled(true); 
        }  
        display.setText("");
    }//GEN-LAST:event_comboTipoCarroActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        atualizarFactory();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void comboTipoGaragemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoGaragemActionPerformed
        if(comboTipoGaragem.getSelectedItem().equals("SELECIONE")) {
            garagem = null;
        } else {
            creator = (ICreator) comboTipoGaragem.getSelectedItem();
            garagem = (IGaragem) creator.criarGaragem(); 
            String nome = garagem.getClass().getName().split("\\.")[1];
            String sufixo = nome.split("Garagem")[1];
            String mensagem = "Garagem " + sufixo + " criada.";
            append(mensagem);
        }  
    }//GEN-LAST:event_comboTipoGaragemActionPerformed

    private void btnEstacionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstacionarActionPerformed
        if(garagem == null) {
            append("Selecione um tipo de garagem!");
        } else if(garagem.isEstacionado()) {
            append(garagem.estacionar(carro));
        } else {
            append("Carro já estacionado!");
        }
    }//GEN-LAST:event_btnEstacionarActionPerformed

    private void append(String texto) {
        display.append("\n" + texto);
    }
    
    private void habilitarDesabilitarBotoes(Boolean bool) {
        btnAbrirTeto.setEnabled(bool);
        btnAlinharRoda.setEnabled(bool);
        btnTocarSom.setEnabled(bool);
        btnCriarCarro.setEnabled(bool);
        btnEstacionar.setEnabled(bool);
    }
    
    private void setModelSelectFactory(List<ICarModelFactory> lista) {
        Object[] modelList = new Object[lista.size() + 1];
        modelList[0] = "SELECIONE";
        for (int i = 1; i <= lista.size(); i++) {
            modelList[i] = (ICarModelFactory)lista.get(i-1);
        }
        comboTipoCarro.setModel(new javax.swing.DefaultComboBoxModel<>(modelList));
    }
    
    private void setModelSelectCreator(List<ICreator> lista) {
        Object[] modelList = new Object[lista.size() + 1];
        modelList[0] = "SELECIONE";
        for (int i = 1; i <= lista.size(); i++) {
            modelList[i] = (ICreator)lista.get(i-1);
        }
        comboTipoGaragem.setModel(new javax.swing.DefaultComboBoxModel<>(modelList));
    }
    
    private Boolean verificarNovosPlugins(int qtdePlugins) {
        Boolean existe = Boolean.FALSE;
        if(buscarListaPlugins().length > qtdePlugins) {
            existe = Boolean.TRUE;
        }                    
        return existe;
    }
        
    private String[] buscarListaPlugins() {
        File currentDir = new File("./plugins");
        String []plugins = currentDir.list();
        return plugins;
    }
    
    private void refreshFactory() {
        String[] plugins = buscarListaPlugins();
        URL[] jars = new URL[plugins.length];
        List<String> listaFactory = new ArrayList<>();
        int index = 0;
        for (String itemSelect : plugins) {
            itemSelect = itemSelect.split("\\.")[0];
            listaFactory.add(itemSelect);
            try {
                jars[index++] = (new File("./plugins/" + itemSelect + ".jar")).toURL();
            } catch (MalformedURLException ex) {
                Logger.getLogger(AbstractFactoryCar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        URLClassLoader ulc = new URLClassLoader(jars);
        List<ICarModelFactory> listaFabricas = new ArrayList<>();
        List<ICreator> listaCreators = new ArrayList<>();
        for (String factoryName : listaFactory) {
            ICarModelFactory factory;
            ICreator garagemCreator;
            try {
                Object plugin = Class.forName(factoryName.toLowerCase() + "." + factoryName, true, ulc).newInstance(); 
                if(plugin instanceof ICarModelFactory) {
                    factory = (ICarModelFactory) plugin;
                    listaFabricas.add(factory);
                } else if(plugin instanceof ICreator) {
                    garagemCreator = (ICreator) plugin;
                    listaCreators.add(garagemCreator);
                } else {
                    append("O plugin " + factoryName + " é desconhecido e não foi adicionado!");
                }
            
            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                append("O plugin " + factoryName + " é desconhecido e não foi adicionado!");
                //Logger.getLogger(AbstractFactoryCar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        setModelSelectFactory(listaFabricas);
        setModelSelectCreator(listaCreators);
        //garagem = (IGaragem)listaCreators.get(0).criarGaragem();
        //garagem = garagem.getClass().newInstance();
    }
    
    private void atualizarFactory() {
        int qtdeFactoryCarro = comboTipoCarro.getItemCount();
        int qtdeCreator = comboTipoGaragem.getItemCount();
        if(qtdeFactoryCarro > 0) {
            qtdeFactoryCarro--;
        }
        if(qtdeCreator > 0) {
            qtdeCreator--;
        }
        if(verificarNovosPlugins(qtdeFactoryCarro + qtdeCreator)) {
            append("Atualizando plugins...");
            refreshFactory();
        } else {
            append("Não há novos plugins.");
        }    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {         
                AbstractFactoryCar app = new AbstractFactoryCar();
                app.setVisible(true);
                app.refreshFactory();
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirTeto;
    private javax.swing.JButton btnAlinharRoda;
    private javax.swing.JButton btnCriarCarro;
    private javax.swing.JButton btnEstacionar;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnTocarSom;
    private javax.swing.JComboBox<Object> comboTipoCarro;
    private javax.swing.JComboBox<Object> comboTipoGaragem;
    private javax.swing.JTextArea display;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTipoCarro;
    private javax.swing.JLabel lblTipoGaragem;
    // End of variables declaration//GEN-END:variables
}
